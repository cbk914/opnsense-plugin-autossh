#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: autossh

# Add the following /etc/rc.conf.d/autossh entry to enable autossh:
# autossh_enable="YES"


. /etc/rc.subr

name=autossh
rcvar=${name}_enable

load_rc_config $name
autossh_enable=${autossh_enable:-"NO"}
autossh_configfile=${autossh_configfile:-"/usr/local/etc/autossh/autossh.conf"}

autossh_flags="-c ${autossh_configfile}"
command=/bin/false
pidfile=/var/run/autossh-monitordaemon.pid

start_cmd="autossh_start_cmd"
start_precmd="autossh_prestart_cmd"
stop_cmd="autossh_stop_cmd"
restart_cmd="autossh_restart_cmd"
status_cmd="autossh_status_cmd"

autossh_prestart_cmd() {
    mkdir -p /var/db/autossh
}

autossh_start_cmd() {
    if [ ! -e ${pidfile} ]; then
        echo "${name} is starting..."
        ${command} ${autossh_flags}
        sleep 1
    else
        if [ $(ps -o pid= -p `cat ${pidfile}` | wc -l) -gt 0 ]; then
            echo "${name} is already running!"
        else
            rm -f ${pidfile}
            echo "${name} is starting..."
            ${command} ${autossh_flags}
            sleep 1
        fi
    fi
}

autossh_stop_cmd() {
    if [ -e ${pidfile} ] && [ $(ps -o pid= -p `cat ${pidfile}` | wc -l) -gt 0 ]; then
        echo "${name} is stopping..."
        if [ -e ${pidfile} ]; then
            kill `cat ${pidfile}`
        fi
        rm -f ${pidfile}
        sleep 1
    else
        echo "${name} is not running?"
    fi
}

autossh_restart_cmd() {
    autossh_stop_cmd
    autossh_start_cmd
}

autossh_status_cmd() {
    if [ -e ${pidfile} ] && [ $(ps -o pid= -p `cat ${pidfile}` | wc -l) -gt 0 ]; then
        echo "${name} is running"
    else
        echo "${name} is not running"
    fi
}

run_rc_command "$1"
